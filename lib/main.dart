import 'dart:convert';

import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        body: Center(
          child: Slider(),
        ),
      ),
    );
  }
}

class Slider extends StatefulWidget {
  final ValueChanged<double> valueChanged;

  Slider({this.valueChanged});

  @override
  SliderState createState() {
    return new SliderState();
  }
}

class SliderState extends State<Slider> {
  ValueNotifier<double> valueListener = ValueNotifier(.0);

  String movingDistance = '0.0';

  String background =
      '';

  String slider =
      "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";

  @override
  void initState() {
    valueListener.addListener(notifyParent);
    super.initState();
  }

  void notifyParent() {
    if (widget.valueChanged != null) {
      widget.valueChanged(valueListener.value);
    }
  }

  MemoryImage imageFromBase64String(String base64String) {
    return MemoryImage(
      base64Decode(base64String),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisAlignment: MainAxisAlignment.center,
      children: <Widget>[
        Container(
          decoration: BoxDecoration(
            image: DecorationImage(
              image: imageFromBase64String(background),
              fit: BoxFit.contain,
            ),
          ),
          height: 150.0,
          width: 300.0,
          margin: EdgeInsets.symmetric(horizontal: 40.0),
          child: Builder(
            builder: (context) {
              final handle = GestureDetector(
                onHorizontalDragUpdate: (details) {
                  valueListener.value = (valueListener.value +
                          details.delta.dx / context.size.width)
                      .clamp(.0, 1.0);
                  print(
                      'The distance of slider moving from first to end ==== ${valueListener.value}');

                  setState(() {
                    movingDistance = valueListener.value.toString();
                  });
                },
                child: Container(
                  decoration: BoxDecoration(
                    image: DecorationImage(
                      image: imageFromBase64String(slider),
                      fit: BoxFit.contain,
                    ),
                  ),
                  width: 60,
                  height: 60,
                ),
              );

              return AnimatedBuilder(
                animation: valueListener,
                builder: (context, child) {
                  return Align(
//                    alignment: Alignment(valueListener.value * 2 - 1, -0.5),
                    alignment:
                        Alignment(valueListener.value * 2 - 1, -1 + 45 / 45),
                    child: child,
                  );
                },
                child: handle,
              );
            },
          ),
        ),
        Padding(
          padding: EdgeInsets.only(top: 21.0),
          child: Text('the fucking value you want: $movingDistance'),
        ),
      ],
    );
  }
}
